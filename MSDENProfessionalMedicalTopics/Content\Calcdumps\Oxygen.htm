<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>Oxygen Delivery Units Conversions</title>
<link href="medcalcstyles.css" type="text/css" rel="stylesheet" />
<meta name="description" content="Medical Calculators, Criteria Sets and Decision Trees" />
<meta name="keywords" content="anesth, units, pulmonary, medcalc3000, medical, education, criteria, treecalc, decision, tree, medicine, clinical, medcalc, 3000, mdcalc, medicalc, medmath, clinicalc, clincalc, online, clinical" /> 
<meta name="author" content="Foundation Internet Services, LLC" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
</head>
<body class="medCalcBody">
<div id="mc3k">

<script language="JavaScript1.1" type="text/javascript">
/* <![CDATA[ */







function log(i){
return Math.log(i) * Math.LOG10E;   
}

function ln(i){
return Math.log(i);
}

function sq(i){
return i * i;
}

function sqr(i){
return Math.sqrt(i);
}


function power(x,y){
return Math.pow(x,y);
}

function eTo(x){
return Math.exp(x);
}


function fixDP(r, dps) {
if (isNaN(r)) return "NaN";
var msign = '';
var mfin = '';
if (r < 0) msign = '-';
x = Math.abs(r);
if (x > Math.pow(10, 21)) return msign + x.toString();
var m = Math.round(x * Math.pow(10, dps)).toString();
if (dps == 0) return msign + m;
while (m.length <= dps) m = "0" + m;
mfin = msign + m.substring(0, m.length - dps) + "." + m.substring(m.length - dps);
if (dps == 1) return mfin.replace('.0', '');
if (dps == 2) return mfin.replace('.00', '');
if (dps == 3) return mfin.replace('.000', '');
if (dps == 4) return mfin.replace('.0000', '');
return mfin;
}

function fixNearest(x,y){
return Math.round(x/y) * y;
}

function alertNaN(thisparam){
 alert(thisparam + ' is improperly formatted. You may only input the digits 0-9 and a decimal point.');
doCalc = false;
clrResults();
}

function clrValue(field) {
field.value = '';
}

var currenttimeout;

function resetInTime(){
if (currenttimeout) clearTimeout(currenttimeout);
currenttimeout = setTimeout('minMaxCheck();', 3000);
}




codes = new Array();
codeparts = new Array();
var dp = 1;
var tovalue;
var to_selected = 0;

function showToValue(){
with (document.Oxygen_form){
to_param.value = fixDP(tovalue, dp);
}}

function setDecPts(){
with (document.Oxygen_form){
dp = decpts.options[decpts.selectedIndex].text;
unitConvert();
}}

function unitLoad(){
with (document.Oxygen_form){

to_selected = 0;

for (i = 0; i < from_unit.options.length; i++) { codes[i] = from_unit.options[i].value; }

codeparts = from_unit.options[from_unit.selectedIndex].value.split('|');
findunit = codeparts[0];
findtype = codeparts[1];
to_unit.options.length = 0;

for (i = 0; i < codes.length; i++){
codeparts = codes[i].split('|');
if (codeparts[1]  == findtype) {
	to_unit.options[to_unit.options.length] = new Option(codeparts[0],codes[i]);
	if ((to_selected == 0) && (codeparts[0] != findunit)) { to_unit.options[to_unit.options.length - 1].selected = true; to_selected = 1; }
	}
}
to_param.value = "";
unitConvert();
}}

function unitConvert(){
with (document.Oxygen_form){

if (to_unit.selectedIndex + from_unit.selectedIndex == 0) return;

if (from_param.value > ''){
unitcode = from_unit.options[from_unit.selectedIndex].value;
codeparts = unitcode.split('|');
fromtype = codeparts[1];
frommult = parseFloat(codeparts[2]);
fromadd = parseFloat(codeparts[3]);

unitcode = to_unit.options[to_unit.selectedIndex].value;
codeparts = unitcode.split('|');
totype = codeparts[1];
tomult = parseFloat(codeparts[2]);
toadd = parseFloat(codeparts[3]);

fromvalue = parseFloat(from_param.value);
tovalue = ((fromvalue * frommult + fromadd) - toadd) / tomult;
showToValue();
}}}

function clrResults(){
with (document.Oxygen_form){
from_param.value = '';
fromvalue = 0;
to_param.value = '';
tovalue = 0;
}}

/* ]]> */
</script>



<form name="Oxygen_form" id="Oxygen_form" action="" onsubmit="return false;" onkeydown="to_param.value='';" onkeyup="unitConvert();">
<table width="100%" cellpadding="4" cellspacing="0" summary="EBMcalc Table">
<tr><td class="medCalcTitleBox" width="1%"><br /></td>
<td class="medCalcTitleBox">
<span class="medCalcFontTitleBox">

 
Oxygen Delivery Units Conversions
</span></td></tr></table><br />&nbsp;<br />
<br />&nbsp;<br />
<center>
<div id="calc_main">
<div id="calc_input">
<table border="0" cellpadding="6" cellspacing="0" summary="EBMcalc Table">
<tr><td align="right"><span class="medCalcFontOneBold">FROM</span></td>
<td align="left"><input type="text" name="from_param" style="width:50px;" onchange="unitConvert();" /></td>
<td>
<select name="from_unit" onchange="unitLoad();">
<option value="Pull-Down|0|1|0" selected="selected">Pull-Down</option>
<option value="%O2|23|1|0|">%O2</option>
<option value="litresO2(nasal)|23|3|21|">litresO2(nasal)</option>
<option value="0|0|1|0"></option>
</select></td></tr>
<tr><td align="right"><span class="medCalcFontOneBold">TO</span></td>
<td align="left"><input type="text" name="to_param" style="width:50px;" aria-readonly="true" /></td>
<td align="left">
<select name="to_unit" onchange="unitConvert();">
<option value="Pull-Down|0|1|0" selected="selected">Pull-Down</option>
<option value="%O2|23|1|0|">%O2</option>
<option value="litresO2(nasal)|23|3|21|">litresO2(nasal)</option>
<option value="0|0|1|0"></option>
</select></td></tr></table>

<br />&nbsp;<br />
<span class="medCalcFontOneBold">
Set maximal display precision in decimal points:
</span>
<select name="decpts" onchange="setDecPts();" class="medCalcFontSelect">
<option>0</option>
<option selected="selected">1</option>
<option>2</option>
<option>3</option>
</select>
</div>
</div>
</center>
</form>

<div id="calc_notes">
<span class="medCalcFontOneBold">Notes</span>
<ul class="medCalcFontOne">
<li>To make simple unit conversions, select the starting units with the pull-down selector on the right. 
Then type a starting value in the top <b>FROM</b> input box. To convert the value, choose the 
new unit in the lower right selector. The converted value will appear immediately in the <b>TO</b> box. 
</li>


</ul>
</div>

<br />&nbsp;<br />

<div id="calc_refs">
<span class="medCalcFontRef"><b>References</b></span>
<ol>
<li><span class="medCalcFontRef">Data conversions are done by simple factor multiplication, 
using the conversion factors listed below.
</span></li>

</ol>
</div>

<div class="calc_tables_supp">
<br />&nbsp;<br />
<span class="medCalcFontOneBold">Conversion factors</span>
<br />&nbsp;<br />
<table border="1" cellpadding="4" cellspacing="0" summary="EBMcalc Table" class="medCalcFontOne">

<tr><td align="left">litresO2(nasal)</td><td>X</td><td align="center">3</td><td>=</td><td align="left">%O2</td></tr>

</table>
</div>
<br />&nbsp;<br /><div id="calc_disclaimer"> <br />&nbsp;<br /><center><br />&nbsp;<br />&nbsp;<br /><table bgcolor="#cccccc" cellpadding="16" summary="EBMcalc Table"><tr><td><center><span class="medCalcFontTwo"><br />&nbsp;<br /><b><u>Legal Notices and Disclaimer</u></b></span></center><br />&nbsp;<br /><span class="medCalcFontTwo">All information contained in and produced by the EBMcalc system is provided
for educational purposes only. This information should not be used for the 
diagnosis or treatment of any health problem or disease.
<b>THIS INFORMATION IS NOT INTENDED TO REPLACE CLINICAL JUDGMENT OR
GUIDE INDIVIDUAL PATIENT CARE IN ANY MANNER.
</b><a href="disclaimer-en.htm" target="_blank">Click here for full notice and disclaimer.</a></span><br />&nbsp;<br /><center><span class="medCalcFontTwo">EBMcalc is Copyright &#169; 1998-2022 Foundation Internet Services &nbsp;&nbsp; [Build 267312 v22.3]</span></center></td></tr></table></center>
</div></div>
</body>
</html>

<!-- 1662473287 //-->
